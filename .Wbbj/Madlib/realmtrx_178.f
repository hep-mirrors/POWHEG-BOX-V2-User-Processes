      SUBROUTINE SREALMTRX_178(P1,ANS)
C  
C Generated by MadGraph II                                              
C MadGraph StandAlone Version
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : g g -> e+ ve b b~ d c~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      Include "nexternal.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB= 256, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
      INTEGER NGRAPHS
      PARAMETER (NGRAPHS= 102)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,NEXTERNAL),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T
      REAL*8 REALMTRX_178
      REAL*8 ZERO
      PARAMETER(ZERO=0d0)
      INTEGER IHEL,IDEN(NCROSS),IC(NEXTERNAL,NCROSS)
      INTEGER IPROC,JC(NEXTERNAL), I,L,K
      LOGICAL GOODHEL(NCOMB,NCROSS)
      DATA NTRY/0/
      INTEGER NGOOD,igood(ncomb),jhel
      data ngood /0/
      save igood,jhel
      REAL*8 hwgt
      integer maxamps
      parameter (maxamps=6000)
      Double Precision amp2(maxamps), jamp2(0:maxamps)
      common/to_Ramps_178/  amp2,       jamp2

      integer j,jj
      integer max_bhel
      parameter ( max_bhel =         256 )

      INTEGER NCOLOR
      DATA NCOLOR   /  20/          
      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 8) /-1,-1,-1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 8) /-1,-1,-1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 8) /-1,-1,-1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 8) /-1,-1,-1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 8) /-1,-1,-1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 8) /-1,-1,-1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 8) /-1,-1,-1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 8) /-1,-1,-1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 8) /-1,-1,-1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 8) /-1,-1,-1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 8) /-1,-1,-1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 8) /-1,-1,-1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 8) /-1,-1,-1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 8) /-1,-1,-1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 8) /-1,-1,-1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 8) /-1,-1,-1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 8) /-1,-1,-1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 8) /-1,-1,-1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 8) /-1,-1,-1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 8) /-1,-1,-1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 8) /-1,-1,-1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 8) /-1,-1,-1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 8) /-1,-1,-1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 8) /-1,-1,-1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 8) /-1,-1,-1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 8) /-1,-1,-1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 8) /-1,-1,-1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 8) /-1,-1,-1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 8) /-1,-1,-1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 8) /-1,-1,-1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 8) /-1,-1,-1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 8) /-1,-1,-1, 1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 8) /-1,-1, 1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 8) /-1,-1, 1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 8) /-1,-1, 1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 8) /-1,-1, 1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 8) /-1,-1, 1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 8) /-1,-1, 1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 8) /-1,-1, 1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 8) /-1,-1, 1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 8) /-1,-1, 1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 8) /-1,-1, 1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 8) /-1,-1, 1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 8) /-1,-1, 1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 8) /-1,-1, 1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 8) /-1,-1, 1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 8) /-1,-1, 1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 8) /-1,-1, 1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  49),IHEL=1, 8) /-1,-1, 1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  50),IHEL=1, 8) /-1,-1, 1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  51),IHEL=1, 8) /-1,-1, 1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  52),IHEL=1, 8) /-1,-1, 1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  53),IHEL=1, 8) /-1,-1, 1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  54),IHEL=1, 8) /-1,-1, 1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  55),IHEL=1, 8) /-1,-1, 1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  56),IHEL=1, 8) /-1,-1, 1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  57),IHEL=1, 8) /-1,-1, 1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  58),IHEL=1, 8) /-1,-1, 1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  59),IHEL=1, 8) /-1,-1, 1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  60),IHEL=1, 8) /-1,-1, 1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  61),IHEL=1, 8) /-1,-1, 1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  62),IHEL=1, 8) /-1,-1, 1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  63),IHEL=1, 8) /-1,-1, 1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  64),IHEL=1, 8) /-1,-1, 1, 1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  65),IHEL=1, 8) /-1, 1,-1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  66),IHEL=1, 8) /-1, 1,-1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  67),IHEL=1, 8) /-1, 1,-1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  68),IHEL=1, 8) /-1, 1,-1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  69),IHEL=1, 8) /-1, 1,-1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  70),IHEL=1, 8) /-1, 1,-1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  71),IHEL=1, 8) /-1, 1,-1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  72),IHEL=1, 8) /-1, 1,-1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  73),IHEL=1, 8) /-1, 1,-1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  74),IHEL=1, 8) /-1, 1,-1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  75),IHEL=1, 8) /-1, 1,-1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  76),IHEL=1, 8) /-1, 1,-1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  77),IHEL=1, 8) /-1, 1,-1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  78),IHEL=1, 8) /-1, 1,-1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  79),IHEL=1, 8) /-1, 1,-1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  80),IHEL=1, 8) /-1, 1,-1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  81),IHEL=1, 8) /-1, 1,-1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  82),IHEL=1, 8) /-1, 1,-1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  83),IHEL=1, 8) /-1, 1,-1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  84),IHEL=1, 8) /-1, 1,-1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  85),IHEL=1, 8) /-1, 1,-1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  86),IHEL=1, 8) /-1, 1,-1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  87),IHEL=1, 8) /-1, 1,-1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  88),IHEL=1, 8) /-1, 1,-1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  89),IHEL=1, 8) /-1, 1,-1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  90),IHEL=1, 8) /-1, 1,-1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  91),IHEL=1, 8) /-1, 1,-1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  92),IHEL=1, 8) /-1, 1,-1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  93),IHEL=1, 8) /-1, 1,-1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  94),IHEL=1, 8) /-1, 1,-1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  95),IHEL=1, 8) /-1, 1,-1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  96),IHEL=1, 8) /-1, 1,-1, 1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  97),IHEL=1, 8) /-1, 1, 1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  98),IHEL=1, 8) /-1, 1, 1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  99),IHEL=1, 8) /-1, 1, 1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL, 100),IHEL=1, 8) /-1, 1, 1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL, 101),IHEL=1, 8) /-1, 1, 1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL, 102),IHEL=1, 8) /-1, 1, 1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL, 103),IHEL=1, 8) /-1, 1, 1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL, 104),IHEL=1, 8) /-1, 1, 1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL, 105),IHEL=1, 8) /-1, 1, 1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL, 106),IHEL=1, 8) /-1, 1, 1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL, 107),IHEL=1, 8) /-1, 1, 1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL, 108),IHEL=1, 8) /-1, 1, 1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL, 109),IHEL=1, 8) /-1, 1, 1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL, 110),IHEL=1, 8) /-1, 1, 1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL, 111),IHEL=1, 8) /-1, 1, 1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL, 112),IHEL=1, 8) /-1, 1, 1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL, 113),IHEL=1, 8) /-1, 1, 1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL, 114),IHEL=1, 8) /-1, 1, 1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL, 115),IHEL=1, 8) /-1, 1, 1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL, 116),IHEL=1, 8) /-1, 1, 1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL, 117),IHEL=1, 8) /-1, 1, 1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL, 118),IHEL=1, 8) /-1, 1, 1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL, 119),IHEL=1, 8) /-1, 1, 1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL, 120),IHEL=1, 8) /-1, 1, 1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL, 121),IHEL=1, 8) /-1, 1, 1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL, 122),IHEL=1, 8) /-1, 1, 1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL, 123),IHEL=1, 8) /-1, 1, 1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL, 124),IHEL=1, 8) /-1, 1, 1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL, 125),IHEL=1, 8) /-1, 1, 1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL, 126),IHEL=1, 8) /-1, 1, 1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL, 127),IHEL=1, 8) /-1, 1, 1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL, 128),IHEL=1, 8) /-1, 1, 1, 1, 1, 1, 1, 1/
      DATA (NHEL(IHEL, 129),IHEL=1, 8) / 1,-1,-1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL, 130),IHEL=1, 8) / 1,-1,-1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL, 131),IHEL=1, 8) / 1,-1,-1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL, 132),IHEL=1, 8) / 1,-1,-1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL, 133),IHEL=1, 8) / 1,-1,-1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL, 134),IHEL=1, 8) / 1,-1,-1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL, 135),IHEL=1, 8) / 1,-1,-1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL, 136),IHEL=1, 8) / 1,-1,-1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL, 137),IHEL=1, 8) / 1,-1,-1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL, 138),IHEL=1, 8) / 1,-1,-1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL, 139),IHEL=1, 8) / 1,-1,-1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL, 140),IHEL=1, 8) / 1,-1,-1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL, 141),IHEL=1, 8) / 1,-1,-1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL, 142),IHEL=1, 8) / 1,-1,-1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL, 143),IHEL=1, 8) / 1,-1,-1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL, 144),IHEL=1, 8) / 1,-1,-1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL, 145),IHEL=1, 8) / 1,-1,-1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL, 146),IHEL=1, 8) / 1,-1,-1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL, 147),IHEL=1, 8) / 1,-1,-1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL, 148),IHEL=1, 8) / 1,-1,-1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL, 149),IHEL=1, 8) / 1,-1,-1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL, 150),IHEL=1, 8) / 1,-1,-1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL, 151),IHEL=1, 8) / 1,-1,-1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL, 152),IHEL=1, 8) / 1,-1,-1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL, 153),IHEL=1, 8) / 1,-1,-1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL, 154),IHEL=1, 8) / 1,-1,-1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL, 155),IHEL=1, 8) / 1,-1,-1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL, 156),IHEL=1, 8) / 1,-1,-1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL, 157),IHEL=1, 8) / 1,-1,-1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL, 158),IHEL=1, 8) / 1,-1,-1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL, 159),IHEL=1, 8) / 1,-1,-1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL, 160),IHEL=1, 8) / 1,-1,-1, 1, 1, 1, 1, 1/
      DATA (NHEL(IHEL, 161),IHEL=1, 8) / 1,-1, 1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL, 162),IHEL=1, 8) / 1,-1, 1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL, 163),IHEL=1, 8) / 1,-1, 1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL, 164),IHEL=1, 8) / 1,-1, 1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL, 165),IHEL=1, 8) / 1,-1, 1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL, 166),IHEL=1, 8) / 1,-1, 1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL, 167),IHEL=1, 8) / 1,-1, 1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL, 168),IHEL=1, 8) / 1,-1, 1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL, 169),IHEL=1, 8) / 1,-1, 1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL, 170),IHEL=1, 8) / 1,-1, 1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL, 171),IHEL=1, 8) / 1,-1, 1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL, 172),IHEL=1, 8) / 1,-1, 1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL, 173),IHEL=1, 8) / 1,-1, 1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL, 174),IHEL=1, 8) / 1,-1, 1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL, 175),IHEL=1, 8) / 1,-1, 1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL, 176),IHEL=1, 8) / 1,-1, 1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL, 177),IHEL=1, 8) / 1,-1, 1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL, 178),IHEL=1, 8) / 1,-1, 1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL, 179),IHEL=1, 8) / 1,-1, 1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL, 180),IHEL=1, 8) / 1,-1, 1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL, 181),IHEL=1, 8) / 1,-1, 1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL, 182),IHEL=1, 8) / 1,-1, 1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL, 183),IHEL=1, 8) / 1,-1, 1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL, 184),IHEL=1, 8) / 1,-1, 1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL, 185),IHEL=1, 8) / 1,-1, 1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL, 186),IHEL=1, 8) / 1,-1, 1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL, 187),IHEL=1, 8) / 1,-1, 1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL, 188),IHEL=1, 8) / 1,-1, 1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL, 189),IHEL=1, 8) / 1,-1, 1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL, 190),IHEL=1, 8) / 1,-1, 1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL, 191),IHEL=1, 8) / 1,-1, 1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL, 192),IHEL=1, 8) / 1,-1, 1, 1, 1, 1, 1, 1/
      DATA (NHEL(IHEL, 193),IHEL=1, 8) / 1, 1,-1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL, 194),IHEL=1, 8) / 1, 1,-1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL, 195),IHEL=1, 8) / 1, 1,-1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL, 196),IHEL=1, 8) / 1, 1,-1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL, 197),IHEL=1, 8) / 1, 1,-1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL, 198),IHEL=1, 8) / 1, 1,-1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL, 199),IHEL=1, 8) / 1, 1,-1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL, 200),IHEL=1, 8) / 1, 1,-1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL, 201),IHEL=1, 8) / 1, 1,-1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL, 202),IHEL=1, 8) / 1, 1,-1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL, 203),IHEL=1, 8) / 1, 1,-1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL, 204),IHEL=1, 8) / 1, 1,-1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL, 205),IHEL=1, 8) / 1, 1,-1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL, 206),IHEL=1, 8) / 1, 1,-1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL, 207),IHEL=1, 8) / 1, 1,-1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL, 208),IHEL=1, 8) / 1, 1,-1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL, 209),IHEL=1, 8) / 1, 1,-1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL, 210),IHEL=1, 8) / 1, 1,-1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL, 211),IHEL=1, 8) / 1, 1,-1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL, 212),IHEL=1, 8) / 1, 1,-1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL, 213),IHEL=1, 8) / 1, 1,-1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL, 214),IHEL=1, 8) / 1, 1,-1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL, 215),IHEL=1, 8) / 1, 1,-1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL, 216),IHEL=1, 8) / 1, 1,-1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL, 217),IHEL=1, 8) / 1, 1,-1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL, 218),IHEL=1, 8) / 1, 1,-1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL, 219),IHEL=1, 8) / 1, 1,-1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL, 220),IHEL=1, 8) / 1, 1,-1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL, 221),IHEL=1, 8) / 1, 1,-1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL, 222),IHEL=1, 8) / 1, 1,-1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL, 223),IHEL=1, 8) / 1, 1,-1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL, 224),IHEL=1, 8) / 1, 1,-1, 1, 1, 1, 1, 1/
      DATA (NHEL(IHEL, 225),IHEL=1, 8) / 1, 1, 1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL, 226),IHEL=1, 8) / 1, 1, 1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL, 227),IHEL=1, 8) / 1, 1, 1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL, 228),IHEL=1, 8) / 1, 1, 1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL, 229),IHEL=1, 8) / 1, 1, 1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL, 230),IHEL=1, 8) / 1, 1, 1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL, 231),IHEL=1, 8) / 1, 1, 1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL, 232),IHEL=1, 8) / 1, 1, 1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL, 233),IHEL=1, 8) / 1, 1, 1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL, 234),IHEL=1, 8) / 1, 1, 1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL, 235),IHEL=1, 8) / 1, 1, 1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL, 236),IHEL=1, 8) / 1, 1, 1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL, 237),IHEL=1, 8) / 1, 1, 1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL, 238),IHEL=1, 8) / 1, 1, 1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL, 239),IHEL=1, 8) / 1, 1, 1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL, 240),IHEL=1, 8) / 1, 1, 1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL, 241),IHEL=1, 8) / 1, 1, 1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL, 242),IHEL=1, 8) / 1, 1, 1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL, 243),IHEL=1, 8) / 1, 1, 1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL, 244),IHEL=1, 8) / 1, 1, 1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL, 245),IHEL=1, 8) / 1, 1, 1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL, 246),IHEL=1, 8) / 1, 1, 1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL, 247),IHEL=1, 8) / 1, 1, 1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL, 248),IHEL=1, 8) / 1, 1, 1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL, 249),IHEL=1, 8) / 1, 1, 1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL, 250),IHEL=1, 8) / 1, 1, 1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL, 251),IHEL=1, 8) / 1, 1, 1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL, 252),IHEL=1, 8) / 1, 1, 1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL, 253),IHEL=1, 8) / 1, 1, 1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL, 254),IHEL=1, 8) / 1, 1, 1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL, 255),IHEL=1, 8) / 1, 1, 1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL, 256),IHEL=1, 8) / 1, 1, 1, 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 8) / 1, 2, 3, 4, 5, 6, 7, 8/
      DATA (IDEN(IHEL),IHEL=  1,  1) / 256/
C ----------
C BEGIN CODE
C ----------
      NTRY=NTRY+1
      DO IPROC=1,NCROSS
      DO IHEL=1,NEXTERNAL
         JC(IHEL) = +1
      ENDDO
      DO IHEL=1,NGRAPHS
          amp2(ihel)=0d0
      ENDDO
      jamp2(0)=dble(NCOLOR)
      DO IHEL=1,int(jamp2(0))
          jamp2(ihel)=0d0
      ENDDO
      ANS(IPROC) = 0D0
          DO IHEL=1,NCOMB
             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
                 T=REALMTRX_178(P1,NHEL(1,IHEL),IHEL,JC(1))              
               ANS(IPROC)=ANS(IPROC)+T
               IF (T .GT. 0D0 .AND. .NOT. GOODHEL(IHEL,IPROC)) THEN
                   GOODHEL(IHEL,IPROC)=.TRUE.
                   NGOOD = NGOOD +1
                   IGOOD(NGOOD) = IHEL
               ENDIF
             ENDIF
          ENDDO
      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
      ENDDO
      END
       
       
      REAL*8 FUNCTION REALMTRX_178(P,NHEL,HELL,IC)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : g g -> e+ ve b b~ d c~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS= 102,NEIGEN= 20) 
      include "nexternal.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS= 149, NCOLOR=  20) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL), HELL
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      integer maxamps
      parameter (maxamps=6000)
      Double Precision amp2(maxamps), jamp2(0:maxamps)
      common/to_Ramps_178/  amp2,       jamp2
      integer max_bhel
      parameter ( max_bhel =         256 )
      include "coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/           18/                                       
      DATA (CF(i,1  ),i=1  ,6  ) /    64,   -8,   -7,   -7,  -16,   56/    
      DATA (CF(i,1  ),i=7  ,12 ) /    -8,    2,    1,    2,  -16,   -6/    
      DATA (CF(i,1  ),i=13 ,18 ) /    -6,   -7,   -6,    2,   12,    2/    
      DATA (CF(i,1  ),i=19 ,20 ) /    56,   -7/                            
C               T[ 5, 8]T[ 7, 6, 2, 1]                                     
      DATA Denom(2  )/           18/                                       
      DATA (CF(i,2  ),i=1  ,6  ) /    -8,   64,    2,   56,    2,   -7/    
      DATA (CF(i,2  ),i=7  ,12 ) /     1,  -16,   -8,   -7,   56,   -6/    
      DATA (CF(i,2  ),i=13 ,18 ) /    -6,   -7,   57,    2,   -6,   -7/    
      DATA (CF(i,2  ),i=19 ,20 ) /   -16,    2/                            
C               T[ 7, 6, 1]T[ 5, 8, 2]                                     
      DATA Denom(3  )/           18/                                       
      DATA (CF(i,3  ),i=1  ,6  ) /    -7,    2,   64,   12,   57,   -6/    
      DATA (CF(i,3  ),i=7  ,12 ) /    56,   -6,  -16,   -8,   10,  -16/    
      DATA (CF(i,3  ),i=13 ,18 ) /    56,   -6,    2,   -6,   -7,    1/    
      DATA (CF(i,3  ),i=19 ,20 ) /     1,   -8/                            
C               T[ 7, 6, 2]T[ 5, 8, 1]                                     
      DATA Denom(4  )/           18/                                       
      DATA (CF(i,4  ),i=1  ,6  ) /    -7,   56,   12,   64,   10,    1/    
      DATA (CF(i,4  ),i=7  ,12 ) /     2,   -8,  -16,   -6,   57,  -16/    
      DATA (CF(i,4  ),i=13 ,18 ) /     2,   -8,   56,    1,   -7,   -6/    
      DATA (CF(i,4  ),i=19 ,20 ) /    -6,   -6/                            
C               T[ 5, 8, 2]T[ 7, 6, 1]                                     
      DATA Denom(5  )/           18/                                       
      DATA (CF(i,5  ),i=1  ,6  ) /   -16,    2,   57,   10,   64,   -8/    
      DATA (CF(i,5  ),i=7  ,12 ) /    56,    1,   -7,   -6,   12,   -7/    
      DATA (CF(i,5  ),i=13 ,18 ) /    56,    1,    2,   -8,  -16,   -6/    
      DATA (CF(i,5  ),i=19 ,20 ) /    -6,   -6/                            
C               T[ 5, 8, 1]T[ 7, 6, 2]                                     
      DATA Denom(6  )/           18/                                       
      DATA (CF(i,6  ),i=1  ,6  ) /    56,   -7,   -6,    1,   -8,   64/    
      DATA (CF(i,6  ),i=7  ,12 ) /   -16,   10,    2,   12,   -6,   -7/    
      DATA (CF(i,6  ),i=13 ,18 ) /    -7,   -8,    2,    1,    2,   -6/    
      DATA (CF(i,6  ),i=19 ,20 ) /    57,   -6/                            
C               T[ 5, 8]T[ 7, 6, 2, 1]                                     
      DATA Denom(7  )/           18/                                       
      DATA (CF(i,7  ),i=1  ,6  ) /    -8,    1,   56,    2,   56,  -16/    
      DATA (CF(i,7  ),i=7  ,12 ) /    64,   -7,   -8,  -16,    2,   -6/    
      DATA (CF(i,7  ),i=13 ,18 ) /    57,    2,   -6,   -7,   -6,    2/    
      DATA (CF(i,7  ),i=19 ,20 ) /    -7,   -7/                            
C               T[ 7, 6, 2]T[ 5, 8, 1]                                     
      DATA Denom(8  )/           18/                                       
      DATA (CF(i,8  ),i=1  ,6  ) /     2,  -16,   -6,   -8,    1,   10/    
      DATA (CF(i,8  ),i=7  ,12 ) /    -7,   64,   56,   57,   -6,    2/    
      DATA (CF(i,8  ),i=13 ,18 ) /     2,    1,   -7,   -8,   -7,   -6/    
      DATA (CF(i,8  ),i=19 ,20 ) /    12,   -6/                            
C               T[ 7, 6]T[ 5, 8, 1, 2]                                     
      DATA Denom(9  )/           18/                                       
      DATA (CF(i,9  ),i=1  ,6  ) /     1,   -8,  -16,  -16,   -7,    2/    
      DATA (CF(i,9  ),i=7  ,12 ) /    -8,   56,   64,   56,   -7,   12/    
      DATA (CF(i,9  ),i=13 ,18 ) /    -6,    2,   -6,   -7,   -6,   -7/    
      DATA (CF(i,9  ),i=19 ,20 ) /     2,    2/                            
C               T[ 7, 6]T[ 5, 8, 1, 2]                                     
      DATA Denom(10 )/           18/                                       
      DATA (CF(i,10 ),i=1  ,6  ) /     2,   -7,   -8,   -6,   -6,   12/    
      DATA (CF(i,10 ),i=7  ,12 ) /   -16,   57,   56,   64,    1,    2/    
      DATA (CF(i,10 ),i=13 ,18 ) /    -7,   -6,    2,   -6,   -7,   -8/    
      DATA (CF(i,10 ),i=19 ,20 ) /    10,    1/                            
C               T[ 7, 6]T[ 5, 8, 1, 2]                                     
      DATA Denom(11 )/           18/                                       
      DATA (CF(i,11 ),i=1  ,6  ) /   -16,   56,   10,   57,   12,   -6/    
      DATA (CF(i,11 ),i=7  ,12 ) /     2,   -6,   -7,    1,   64,   -7/    
      DATA (CF(i,11 ),i=13 ,18 ) /     2,   -6,   56,   -6,  -16,   -8/    
      DATA (CF(i,11 ),i=19 ,20 ) /    -8,    1/                            
C               T[ 7, 6, 1]T[ 5, 8, 2]                                     
      DATA Denom(12 )/           18/                                       
      DATA (CF(i,12 ),i=1  ,6  ) /    -6,   -6,  -16,  -16,   -7,   -7/    
      DATA (CF(i,12 ),i=7  ,12 ) /    -6,    2,   12,    2,   -7,   64/    
      DATA (CF(i,12 ),i=13 ,18 ) /    -8,   56,   -8,    2,    1,    2/    
      DATA (CF(i,12 ),i=19 ,20 ) /    -7,   56/                            
C               T[ 5, 8]T[ 7, 6, 1, 2]                                     
      DATA Denom(13 )/           18/                                       
      DATA (CF(i,13 ),i=1  ,6  ) /    -6,   -6,   56,    2,   56,   -7/    
      DATA (CF(i,13 ),i=7  ,12 ) /    57,    2,   -6,   -7,    2,   -8/    
      DATA (CF(i,13 ),i=13 ,18 ) /    64,   -7,    1,  -16,   -8,   -7/    
      DATA (CF(i,13 ),i=19 ,20 ) /     2,  -16/                            
C               T[ 7, 6, 2]T[ 5, 8, 1]                                     
      DATA Denom(14 )/           18/                                       
      DATA (CF(i,14 ),i=1  ,6  ) /    -7,   -7,   -6,   -8,    1,   -8/    
      DATA (CF(i,14 ),i=7  ,12 ) /     2,    1,    2,   -6,   -6,   56/    
      DATA (CF(i,14 ),i=13 ,18 ) /    -7,   64,  -16,   10,    2,   12/    
      DATA (CF(i,14 ),i=19 ,20 ) /    -6,   57/                            
C               T[ 5, 8]T[ 7, 6, 1, 2]                                     
      DATA Denom(15 )/           18/                                       
      DATA (CF(i,15 ),i=1  ,6  ) /    -6,   57,    2,   56,    2,    2/    
      DATA (CF(i,15 ),i=7  ,12 ) /    -6,   -7,   -6,    2,   56,   -8/    
      DATA (CF(i,15 ),i=13 ,18 ) /     1,  -16,   64,   -7,   -8,  -16/    
      DATA (CF(i,15 ),i=19 ,20 ) /    -7,   -7/                            
C               T[ 7, 6, 1]T[ 5, 8, 2]                                     
      DATA Denom(16 )/           18/                                       
      DATA (CF(i,16 ),i=1  ,6  ) /     2,    2,   -6,    1,   -8,    1/    
      DATA (CF(i,16 ),i=7  ,12 ) /    -7,   -8,   -7,   -6,   -6,    2/    
      DATA (CF(i,16 ),i=13 ,18 ) /   -16,   10,   -7,   64,   56,   57/    
      DATA (CF(i,16 ),i=19 ,20 ) /    -6,   12/                            
C               T[ 7, 6]T[ 5, 8, 2, 1]                                     
      DATA Denom(17 )/           18/                                       
      DATA (CF(i,17 ),i=1  ,6  ) /    12,   -6,   -7,   -7,  -16,    2/    
      DATA (CF(i,17 ),i=7  ,12 ) /    -6,   -7,   -6,   -7,  -16,    1/    
      DATA (CF(i,17 ),i=13 ,18 ) /    -8,    2,   -8,   56,   64,   56/    
      DATA (CF(i,17 ),i=19 ,20 ) /     2,    2/                            
C               T[ 7, 6]T[ 5, 8, 2, 1]                                     
      DATA Denom(18 )/           18/                                       
      DATA (CF(i,18 ),i=1  ,6  ) /     2,   -7,    1,   -6,   -6,   -6/    
      DATA (CF(i,18 ),i=7  ,12 ) /     2,   -6,   -7,   -8,   -8,    2/    
      DATA (CF(i,18 ),i=13 ,18 ) /    -7,   12,  -16,   57,   56,   64/    
      DATA (CF(i,18 ),i=19 ,20 ) /     1,   10/                            
C               T[ 7, 6]T[ 5, 8, 2, 1]                                     
      DATA Denom(19 )/           18/                                       
      DATA (CF(i,19 ),i=1  ,6  ) /    56,  -16,    1,   -6,   -6,   57/    
      DATA (CF(i,19 ),i=7  ,12 ) /    -7,   12,    2,   10,   -8,   -7/    
      DATA (CF(i,19 ),i=13 ,18 ) /     2,   -6,   -7,   -6,    2,    1/    
      DATA (CF(i,19 ),i=19 ,20 ) /    64,   -8/                            
C               T[ 7, 6, 2, 1]T[ 5, 8]                                     
      DATA Denom(20 )/           18/                                       
      DATA (CF(i,20 ),i=1  ,6  ) /    -7,    2,   -8,   -6,   -6,   -6/    
      DATA (CF(i,20 ),i=7  ,12 ) /    -7,   -6,    2,    1,    1,   56/    
      DATA (CF(i,20 ),i=13 ,18 ) /   -16,   57,   -7,   12,    2,   10/    
      DATA (CF(i,20 ),i=19 ,20 ) /    -8,   64/                            
C               T[ 7, 6, 1, 2]T[ 5, 8]                                     
C ----------
C BEGIN CODE
C ----------
      CALL VXXXXX(P(0,1   ),ZERO ,NHEL(1   ),-1*IC(1   ),W(1,1   ))        
      CALL VXXXXX(P(0,2   ),ZERO ,NHEL(2   ),-1*IC(2   ),W(1,2   ))        
      CALL IXXXXX(P(0,3   ),ZERO ,NHEL(3   ),-1*IC(3   ),W(1,3   ))        
      CALL OXXXXX(P(0,4   ),ZERO ,NHEL(4   ),+1*IC(4   ),W(1,4   ))        
      CALL OXXXXX(P(0,5   ),BMASS ,NHEL(5   ),+1*IC(5   ),W(1,5   ))       
      CALL IXXXXX(P(0,6   ),BMASS ,NHEL(6   ),-1*IC(6   ),W(1,6   ))       
      CALL OXXXXX(P(0,7   ),ZERO ,NHEL(7   ),+1*IC(7   ),W(1,7   ))        
      CALL IXXXXX(P(0,8   ),ZERO ,NHEL(8   ),-1*IC(8   ),W(1,8   ))        
      CALL JIOXXX(W(1,3   ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,9   ))    
      CALL FVOXXX(W(1,7   ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,10  ))     
      CALL FVIXXX(W(1,8   ),W(1,9   ),GWFCD ,ZERO    ,ZERO    ,W(1,        
     &     11  ))                                                          
      CALL JIOXXX(W(1,11  ),W(1,10  ),GG ,ZERO    ,ZERO    ,W(1,12  ))     
      CALL FVOXXX(W(1,5   ),W(1,12  ),GG ,BMASS   ,ZERO    ,W(1,13  ))     
      CALL IOVXXX(W(1,6   ),W(1,13  ),W(1,1   ),GG ,AMP(1   ))             
      CALL FVOXXX(W(1,10  ),W(1,9   ),GWFCD ,ZERO    ,ZERO    ,W(1,        
     &     14  ))                                                          
      CALL JIOXXX(W(1,8   ),W(1,14  ),GG ,ZERO    ,ZERO    ,W(1,15  ))     
      CALL FVOXXX(W(1,5   ),W(1,15  ),GG ,BMASS   ,ZERO    ,W(1,16  ))     
      CALL IOVXXX(W(1,6   ),W(1,16  ),W(1,1   ),GG ,AMP(2   ))             
      CALL FVOXXX(W(1,7   ),W(1,9   ),GWFCD ,ZERO    ,ZERO    ,W(1,        
     &     17  ))                                                          
      CALL FVIXXX(W(1,8   ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,18  ))     
      CALL JIOXXX(W(1,18  ),W(1,17  ),GG ,ZERO    ,ZERO    ,W(1,19  ))     
      CALL FVOXXX(W(1,5   ),W(1,19  ),GG ,BMASS   ,ZERO    ,W(1,20  ))     
      CALL IOVXXX(W(1,6   ),W(1,20  ),W(1,1   ),GG ,AMP(3   ))             
      CALL JIOXXX(W(1,8   ),W(1,17  ),GG ,ZERO    ,ZERO    ,W(1,21  ))     
      CALL JVVXXX(W(1,21  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,22  ))      
      CALL FVOXXX(W(1,5   ),W(1,22  ),GG ,BMASS   ,ZERO    ,W(1,23  ))     
      CALL IOVXXX(W(1,6   ),W(1,23  ),W(1,1   ),GG ,AMP(4   ))             
      CALL FVOXXX(W(1,17  ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,24  ))     
      CALL JIOXXX(W(1,8   ),W(1,24  ),GG ,ZERO    ,ZERO    ,W(1,25  ))     
      CALL FVOXXX(W(1,5   ),W(1,25  ),GG ,BMASS   ,ZERO    ,W(1,26  ))     
      CALL IOVXXX(W(1,6   ),W(1,26  ),W(1,1   ),GG ,AMP(5   ))             
      CALL JIOXXX(W(1,11  ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,27  ))     
      CALL JVVXXX(W(1,27  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,28  ))      
      CALL FVOXXX(W(1,5   ),W(1,28  ),GG ,BMASS   ,ZERO    ,W(1,29  ))     
      CALL IOVXXX(W(1,6   ),W(1,29  ),W(1,1   ),GG ,AMP(6   ))             
      CALL FVIXXX(W(1,18  ),W(1,9   ),GWFCD ,ZERO    ,ZERO    ,W(1,        
     &     30  ))                                                          
      CALL JIOXXX(W(1,30  ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,31  ))     
      CALL FVOXXX(W(1,5   ),W(1,31  ),GG ,BMASS   ,ZERO    ,W(1,32  ))     
      CALL IOVXXX(W(1,6   ),W(1,32  ),W(1,1   ),GG ,AMP(7   ))             
      CALL FVIXXX(W(1,11  ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,33  ))     
      CALL JIOXXX(W(1,33  ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,34  ))     
      CALL FVOXXX(W(1,5   ),W(1,34  ),GG ,BMASS   ,ZERO    ,W(1,35  ))     
      CALL IOVXXX(W(1,6   ),W(1,35  ),W(1,1   ),GG ,AMP(8   ))             
      CALL FVOXXX(W(1,5   ),W(1,1   ),GG ,BMASS   ,ZERO    ,W(1,36  ))     
      CALL FVOXXX(W(1,36  ),W(1,21  ),GG ,BMASS   ,ZERO    ,W(1,37  ))     
      CALL IOVXXX(W(1,6   ),W(1,37  ),W(1,2   ),GG ,AMP(9   ))             
      CALL FVOXXX(W(1,36  ),W(1,27  ),GG ,BMASS   ,ZERO    ,W(1,38  ))     
      CALL IOVXXX(W(1,6   ),W(1,38  ),W(1,2   ),GG ,AMP(10  ))             
      CALL FVOXXX(W(1,7   ),W(1,1   ),GG ,ZERO    ,ZERO    ,W(1,39  ))     
      CALL JIOXXX(W(1,30  ),W(1,39  ),GG ,ZERO    ,ZERO    ,W(1,40  ))     
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,40  ),GG ,AMP(11  ))             
      CALL JIOXXX(W(1,33  ),W(1,39  ),GG ,ZERO    ,ZERO    ,W(1,41  ))     
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,41  ),GG ,AMP(12  ))             
      CALL FVIXXX(W(1,8   ),W(1,1   ),GG ,ZERO    ,ZERO    ,W(1,42  ))     
      CALL JIOXXX(W(1,42  ),W(1,14  ),GG ,ZERO    ,ZERO    ,W(1,43  ))     
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,43  ),GG ,AMP(13  ))             
      CALL JVVXXX(W(1,12  ),W(1,1   ),G ,ZERO    ,ZERO    ,W(1,44  ))      
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,44  ),GG ,AMP(14  ))             
      CALL JVVXXX(W(1,15  ),W(1,1   ),G ,ZERO    ,ZERO    ,W(1,45  ))      
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,45  ),GG ,AMP(15  ))             
      CALL FVOXXX(W(1,14  ),W(1,1   ),GG ,ZERO    ,ZERO    ,W(1,46  ))     
      CALL JIOXXX(W(1,8   ),W(1,46  ),GG ,ZERO    ,ZERO    ,W(1,47  ))     
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,47  ),GG ,AMP(16  ))             
      CALL JIOXXX(W(1,42  ),W(1,24  ),GG ,ZERO    ,ZERO    ,W(1,48  ))     
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,48  ),GG ,AMP(17  ))             
      CALL JVVXXX(W(1,19  ),W(1,1   ),G ,ZERO    ,ZERO    ,W(1,49  ))      
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,49  ),GG ,AMP(18  ))             
      CALL JVVXXX(W(1,22  ),W(1,1   ),G ,ZERO    ,ZERO    ,W(1,50  ))      
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,50  ),GG ,AMP(19  ))             
      CALL JVVXXX(W(1,25  ),W(1,1   ),G ,ZERO    ,ZERO    ,W(1,51  ))      
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,51  ),GG ,AMP(20  ))             
      CALL FVOXXX(W(1,24  ),W(1,1   ),GG ,ZERO    ,ZERO    ,W(1,52  ))     
      CALL JIOXXX(W(1,8   ),W(1,52  ),GG ,ZERO    ,ZERO    ,W(1,53  ))     
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,53  ),GG ,AMP(21  ))             
      CALL JVVXXX(W(1,28  ),W(1,1   ),G ,ZERO    ,ZERO    ,W(1,54  ))      
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,54  ),GG ,AMP(22  ))             
      CALL JVVXXX(W(1,31  ),W(1,1   ),G ,ZERO    ,ZERO    ,W(1,55  ))      
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,55  ),GG ,AMP(23  ))             
      CALL JVVXXX(W(1,34  ),W(1,1   ),G ,ZERO    ,ZERO    ,W(1,56  ))      
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,56  ),GG ,AMP(24  ))             
      CALL FVIXXX(W(1,30  ),W(1,1   ),GG ,ZERO    ,ZERO    ,W(1,57  ))     
      CALL JIOXXX(W(1,57  ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,58  ))     
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,58  ),GG ,AMP(25  ))             
      CALL FVIXXX(W(1,33  ),W(1,1   ),GG ,ZERO    ,ZERO    ,W(1,59  ))     
      CALL JIOXXX(W(1,59  ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,60  ))     
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,60  ),GG ,AMP(26  ))             
      CALL FVOXXX(W(1,36  ),W(1,2   ),GG ,BMASS   ,ZERO    ,W(1,61  ))     
      CALL IOVXXX(W(1,6   ),W(1,61  ),W(1,27  ),GG ,AMP(27  ))             
      CALL IOVXXX(W(1,6   ),W(1,61  ),W(1,21  ),GG ,AMP(28  ))             
      CALL IOVXXX(W(1,6   ),W(1,36  ),W(1,12  ),GG ,AMP(29  ))             
      CALL IOVXXX(W(1,6   ),W(1,36  ),W(1,15  ),GG ,AMP(30  ))             
      CALL IOVXXX(W(1,6   ),W(1,36  ),W(1,19  ),GG ,AMP(31  ))             
      CALL IOVXXX(W(1,6   ),W(1,36  ),W(1,22  ),GG ,AMP(32  ))             
      CALL IOVXXX(W(1,6   ),W(1,36  ),W(1,25  ),GG ,AMP(33  ))             
      CALL IOVXXX(W(1,6   ),W(1,36  ),W(1,28  ),GG ,AMP(34  ))             
      CALL IOVXXX(W(1,6   ),W(1,36  ),W(1,31  ),GG ,AMP(35  ))             
      CALL IOVXXX(W(1,6   ),W(1,36  ),W(1,34  ),GG ,AMP(36  ))             
      CALL FVOXXX(W(1,5   ),W(1,2   ),GG ,BMASS   ,ZERO    ,W(1,62  ))     
      CALL FVOXXX(W(1,62  ),W(1,21  ),GG ,BMASS   ,ZERO    ,W(1,63  ))     
      CALL IOVXXX(W(1,6   ),W(1,63  ),W(1,1   ),GG ,AMP(37  ))             
      CALL FVOXXX(W(1,62  ),W(1,27  ),GG ,BMASS   ,ZERO    ,W(1,64  ))     
      CALL IOVXXX(W(1,6   ),W(1,64  ),W(1,1   ),GG ,AMP(38  ))             
      CALL JIOXXX(W(1,11  ),W(1,39  ),GG ,ZERO    ,ZERO    ,W(1,65  ))     
      CALL FVOXXX(W(1,5   ),W(1,65  ),GG ,BMASS   ,ZERO    ,W(1,66  ))     
      CALL IOVXXX(W(1,6   ),W(1,66  ),W(1,2   ),GG ,AMP(39  ))             
      CALL FVOXXX(W(1,39  ),W(1,9   ),GWFCD ,ZERO    ,ZERO    ,W(1,        
     &     67  ))                                                          
      CALL JIOXXX(W(1,8   ),W(1,67  ),GG ,ZERO    ,ZERO    ,W(1,68  ))     
      CALL FVOXXX(W(1,5   ),W(1,68  ),GG ,BMASS   ,ZERO    ,W(1,69  ))     
      CALL IOVXXX(W(1,6   ),W(1,69  ),W(1,2   ),GG ,AMP(40  ))             
      CALL JIOXXX(W(1,42  ),W(1,17  ),GG ,ZERO    ,ZERO    ,W(1,70  ))     
      CALL FVOXXX(W(1,5   ),W(1,70  ),GG ,BMASS   ,ZERO    ,W(1,71  ))     
      CALL IOVXXX(W(1,6   ),W(1,71  ),W(1,2   ),GG ,AMP(41  ))             
      CALL JVVXXX(W(1,1   ),W(1,21  ),G ,ZERO    ,ZERO    ,W(1,72  ))      
      CALL FVOXXX(W(1,5   ),W(1,72  ),GG ,BMASS   ,ZERO    ,W(1,73  ))     
      CALL IOVXXX(W(1,6   ),W(1,73  ),W(1,2   ),GG ,AMP(42  ))             
      CALL FVOXXX(W(1,17  ),W(1,1   ),GG ,ZERO    ,ZERO    ,W(1,74  ))     
      CALL JIOXXX(W(1,8   ),W(1,74  ),GG ,ZERO    ,ZERO    ,W(1,75  ))     
      CALL FVOXXX(W(1,5   ),W(1,75  ),GG ,BMASS   ,ZERO    ,W(1,76  ))     
      CALL IOVXXX(W(1,6   ),W(1,76  ),W(1,2   ),GG ,AMP(43  ))             
      CALL JVVXXX(W(1,1   ),W(1,27  ),G ,ZERO    ,ZERO    ,W(1,77  ))      
      CALL FVOXXX(W(1,5   ),W(1,77  ),GG ,BMASS   ,ZERO    ,W(1,78  ))     
      CALL IOVXXX(W(1,6   ),W(1,78  ),W(1,2   ),GG ,AMP(44  ))             
      CALL FVIXXX(W(1,42  ),W(1,9   ),GWFCD ,ZERO    ,ZERO    ,W(1,        
     &     79  ))                                                          
      CALL JIOXXX(W(1,79  ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,80  ))     
      CALL FVOXXX(W(1,5   ),W(1,80  ),GG ,BMASS   ,ZERO    ,W(1,81  ))     
      CALL IOVXXX(W(1,6   ),W(1,81  ),W(1,2   ),GG ,AMP(45  ))             
      CALL FVIXXX(W(1,11  ),W(1,1   ),GG ,ZERO    ,ZERO    ,W(1,82  ))     
      CALL JIOXXX(W(1,82  ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,83  ))     
      CALL FVOXXX(W(1,5   ),W(1,83  ),GG ,BMASS   ,ZERO    ,W(1,84  ))     
      CALL IOVXXX(W(1,6   ),W(1,84  ),W(1,2   ),GG ,AMP(46  ))             
      CALL JIOXXX(W(1,18  ),W(1,67  ),GG ,ZERO    ,ZERO    ,W(1,85  ))     
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,85  ),GG ,AMP(47  ))             
      CALL JVVXXX(W(1,65  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,86  ))      
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,86  ),GG ,AMP(48  ))             
      CALL JVVXXX(W(1,68  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,87  ))      
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,87  ),GG ,AMP(49  ))             
      CALL FVOXXX(W(1,67  ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,88  ))     
      CALL JIOXXX(W(1,8   ),W(1,88  ),GG ,ZERO    ,ZERO    ,W(1,89  ))     
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,89  ),GG ,AMP(50  ))             
      CALL JIOXXX(W(1,79  ),W(1,10  ),GG ,ZERO    ,ZERO    ,W(1,90  ))     
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,90  ),GG ,AMP(51  ))             
      CALL JIOXXX(W(1,82  ),W(1,10  ),GG ,ZERO    ,ZERO    ,W(1,91  ))     
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,91  ),GG ,AMP(52  ))             
      CALL JVVXXX(W(1,70  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,92  ))      
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,92  ),GG ,AMP(53  ))             
      CALL JIOXXX(W(1,18  ),W(1,74  ),GG ,ZERO    ,ZERO    ,W(1,93  ))     
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,93  ),GG ,AMP(54  ))             
      CALL JVVXXX(W(1,72  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,94  ))      
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,94  ),GG ,AMP(55  ))             
      CALL JVVXXX(W(1,75  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,95  ))      
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,95  ),GG ,AMP(56  ))             
      CALL FVOXXX(W(1,74  ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,96  ))     
      CALL JIOXXX(W(1,8   ),W(1,96  ),GG ,ZERO    ,ZERO    ,W(1,97  ))     
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,97  ),GG ,AMP(57  ))             
      CALL JVVXXX(W(1,77  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,98  ))      
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,98  ),GG ,AMP(58  ))             
      CALL JVVXXX(W(1,80  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,99  ))      
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,99  ),GG ,AMP(59  ))             
      CALL JVVXXX(W(1,83  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,100 ))      
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,100 ),GG ,AMP(60  ))             
      CALL FVIXXX(W(1,79  ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,101 ))     
      CALL JIOXXX(W(1,101 ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,102 ))     
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,102 ),GG ,AMP(61  ))             
      CALL FVIXXX(W(1,82  ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,103 ))     
      CALL JIOXXX(W(1,103 ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,104 ))     
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,104 ),GG ,AMP(62  ))             
      CALL FVOXXX(W(1,62  ),W(1,1   ),GG ,BMASS   ,ZERO    ,W(1,105 ))     
      CALL IOVXXX(W(1,6   ),W(1,105 ),W(1,27  ),GG ,AMP(63  ))             
      CALL IOVXXX(W(1,6   ),W(1,105 ),W(1,21  ),GG ,AMP(64  ))             
      CALL IOVXXX(W(1,6   ),W(1,62  ),W(1,65  ),GG ,AMP(65  ))             
      CALL IOVXXX(W(1,6   ),W(1,62  ),W(1,68  ),GG ,AMP(66  ))             
      CALL IOVXXX(W(1,6   ),W(1,62  ),W(1,70  ),GG ,AMP(67  ))             
      CALL IOVXXX(W(1,6   ),W(1,62  ),W(1,72  ),GG ,AMP(68  ))             
      CALL IOVXXX(W(1,6   ),W(1,62  ),W(1,75  ),GG ,AMP(69  ))             
      CALL IOVXXX(W(1,6   ),W(1,62  ),W(1,77  ),GG ,AMP(70  ))             
      CALL IOVXXX(W(1,6   ),W(1,62  ),W(1,80  ),GG ,AMP(71  ))             
      CALL IOVXXX(W(1,6   ),W(1,62  ),W(1,83  ),GG ,AMP(72  ))             
      CALL JGGGXX(W(1,1   ),W(1,2   ),W(1,21  ),G ,W(1,106 ))              
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,106 ),GG ,AMP(73  ))             
      CALL JGGGXX(W(1,21  ),W(1,1   ),W(1,2   ),G ,W(1,107 ))              
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,107 ),GG ,AMP(74  ))             
      CALL JGGGXX(W(1,2   ),W(1,21  ),W(1,1   ),G ,W(1,108 ))              
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,108 ),GG ,AMP(75  ))             
      CALL JGGGXX(W(1,1   ),W(1,2   ),W(1,27  ),G ,W(1,109 ))              
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,109 ),GG ,AMP(76  ))             
      CALL JGGGXX(W(1,27  ),W(1,1   ),W(1,2   ),G ,W(1,110 ))              
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,110 ),GG ,AMP(77  ))             
      CALL JGGGXX(W(1,2   ),W(1,27  ),W(1,1   ),G ,W(1,111 ))              
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,111 ),GG ,AMP(78  ))             
      CALL FVOXXX(W(1,5   ),W(1,27  ),GG ,BMASS   ,ZERO    ,W(1,112 ))     
      CALL FVOXXX(W(1,112 ),W(1,2   ),GG ,BMASS   ,ZERO    ,W(1,113 ))     
      CALL IOVXXX(W(1,6   ),W(1,113 ),W(1,1   ),GG ,AMP(79  ))             
      CALL FVOXXX(W(1,5   ),W(1,21  ),GG ,BMASS   ,ZERO    ,W(1,114 ))     
      CALL FVOXXX(W(1,114 ),W(1,2   ),GG ,BMASS   ,ZERO    ,W(1,115 ))     
      CALL IOVXXX(W(1,6   ),W(1,115 ),W(1,1   ),GG ,AMP(80  ))             
      CALL FVOXXX(W(1,112 ),W(1,1   ),GG ,BMASS   ,ZERO    ,W(1,116 ))     
      CALL IOVXXX(W(1,6   ),W(1,116 ),W(1,2   ),GG ,AMP(81  ))             
      CALL FVOXXX(W(1,114 ),W(1,1   ),GG ,BMASS   ,ZERO    ,W(1,117 ))     
      CALL IOVXXX(W(1,6   ),W(1,117 ),W(1,2   ),GG ,AMP(82  ))             
      CALL FVOXXX(W(1,39  ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,118 ))     
      CALL JIOXXX(W(1,11  ),W(1,118 ),GG ,ZERO    ,ZERO    ,W(1,119 ))     
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,119 ),GG ,AMP(83  ))             
      CALL FVOXXX(W(1,118 ),W(1,9   ),GWFCD ,ZERO    ,ZERO    ,W(1,        
     &     120 ))                                                          
      CALL JIOXXX(W(1,8   ),W(1,120 ),GG ,ZERO    ,ZERO    ,W(1,121 ))     
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,121 ),GG ,AMP(84  ))             
      CALL FVOXXX(W(1,10  ),W(1,1   ),GG ,ZERO    ,ZERO    ,W(1,122 ))     
      CALL JIOXXX(W(1,11  ),W(1,122 ),GG ,ZERO    ,ZERO    ,W(1,123 ))     
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,123 ),GG ,AMP(85  ))             
      CALL FVOXXX(W(1,122 ),W(1,9   ),GWFCD ,ZERO    ,ZERO    ,W(1,        
     &     124 ))                                                          
      CALL JIOXXX(W(1,8   ),W(1,124 ),GG ,ZERO    ,ZERO    ,W(1,125 ))     
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,125 ),GG ,AMP(86  ))             
      CALL JVVXXX(W(1,1   ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,126 ))      
      CALL FVOXXX(W(1,7   ),W(1,126 ),GG ,ZERO    ,ZERO    ,W(1,127 ))     
      CALL JIOXXX(W(1,11  ),W(1,127 ),GG ,ZERO    ,ZERO    ,W(1,128 ))     
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,128 ),GG ,AMP(87  ))             
      CALL FVOXXX(W(1,127 ),W(1,9   ),GWFCD ,ZERO    ,ZERO    ,W(1,        
     &     129 ))                                                          
      CALL JIOXXX(W(1,8   ),W(1,129 ),GG ,ZERO    ,ZERO    ,W(1,130 ))     
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,130 ),GG ,AMP(88  ))             
      CALL FVIXXX(W(1,42  ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,131 ))     
      CALL JIOXXX(W(1,131 ),W(1,17  ),GG ,ZERO    ,ZERO    ,W(1,132 ))     
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,132 ),GG ,AMP(89  ))             
      CALL FVIXXX(W(1,18  ),W(1,1   ),GG ,ZERO    ,ZERO    ,W(1,133 ))     
      CALL JIOXXX(W(1,133 ),W(1,17  ),GG ,ZERO    ,ZERO    ,W(1,134 ))     
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,134 ),GG ,AMP(90  ))             
      CALL FVIXXX(W(1,8   ),W(1,126 ),GG ,ZERO    ,ZERO    ,W(1,135 ))     
      CALL JIOXXX(W(1,135 ),W(1,17  ),GG ,ZERO    ,ZERO    ,W(1,136 ))     
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,136 ),GG ,AMP(91  ))             
      CALL JVVXXX(W(1,27  ),W(1,126 ),G ,ZERO    ,ZERO    ,W(1,137 ))      
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,137 ),GG ,AMP(92  ))             
      CALL FVOXXX(W(1,17  ),W(1,126 ),GG ,ZERO    ,ZERO    ,W(1,138 ))     
      CALL JIOXXX(W(1,8   ),W(1,138 ),GG ,ZERO    ,ZERO    ,W(1,139 ))     
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,139 ),GG ,AMP(93  ))             
      CALL JVVXXX(W(1,21  ),W(1,126 ),G ,ZERO    ,ZERO    ,W(1,140 ))      
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,140 ),GG ,AMP(94  ))             
      CALL FVIXXX(W(1,131 ),W(1,9   ),GWFCD ,ZERO    ,ZERO    ,W(1,        
     &     141 ))                                                          
      CALL JIOXXX(W(1,141 ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,142 ))     
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,142 ),GG ,AMP(95  ))             
      CALL FVIXXX(W(1,133 ),W(1,9   ),GWFCD ,ZERO    ,ZERO    ,W(1,        
     &     143 ))                                                          
      CALL JIOXXX(W(1,143 ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,144 ))     
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,144 ),GG ,AMP(96  ))             
      CALL FVIXXX(W(1,135 ),W(1,9   ),GWFCD ,ZERO    ,ZERO    ,W(1,        
     &     145 ))                                                          
      CALL JIOXXX(W(1,145 ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,146 ))     
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,146 ),GG ,AMP(97  ))             
      CALL FVIXXX(W(1,11  ),W(1,126 ),GG ,ZERO    ,ZERO    ,W(1,147 ))     
      CALL JIOXXX(W(1,147 ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,148 ))     
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,148 ),GG ,AMP(98  ))             
      CALL IOVXXX(W(1,6   ),W(1,112 ),W(1,126 ),GG ,AMP(99  ))             
      CALL IOVXXX(W(1,6   ),W(1,114 ),W(1,126 ),GG ,AMP(100 ))             
      CALL FVOXXX(W(1,5   ),W(1,126 ),GG ,BMASS   ,ZERO    ,W(1,149 ))     
      CALL IOVXXX(W(1,6   ),W(1,149 ),W(1,27  ),GG ,AMP(101 ))             
      CALL IOVXXX(W(1,6   ),W(1,149 ),W(1,21  ),GG ,AMP(102 ))             
      JAMP(   1) = +AMP(   1)+AMP(   2)+AMP(   4)+AMP(   5)+AMP(   6)
     &             +AMP(  15)+AMP(  20)
      JAMP(   2) = +AMP(   3)-AMP(   4)-AMP(   6)+AMP(   7)+AMP(   8)
     &             +AMP(  23)+AMP(  24)
      JAMP(   3) = +AMP(   9)+AMP(  10)
      JAMP(   4) = +AMP(  11)+AMP(  12)+AMP(  18)-AMP(  19)-AMP(  22)
     &             +AMP(  47)-AMP(  48)+AMP(  54)+AMP(  55)+AMP(  58)
     &             +AMP(  74)-AMP(  75)+AMP(  77)-AMP(  78)
      JAMP(   5) = +AMP(  13)-AMP(  14)+AMP(  17)-AMP(  19)-AMP(  22)
     &             +AMP(  51)+AMP(  52)+AMP(  53)+AMP(  55)+AMP(  58)
     &             +AMP(  74)-AMP(  75)+AMP(  77)-AMP(  78)
      JAMP(   6) = +AMP(  14)+AMP(  16)+AMP(  19)+AMP(  21)+AMP(  22)
     &             -AMP(  73)+AMP(  75)-AMP(  76)+AMP(  78)+AMP(  85)
     &             +AMP(  86)-AMP(  87)-AMP(  88)-AMP(  93)
      JAMP(   7) = -AMP(  15)-AMP(  20)+AMP(  29)+AMP(  30)+AMP(  32)
     &             +AMP(  33)+AMP(  34)
      JAMP(   8) = -AMP(  18)+AMP(  19)+AMP(  22)+AMP(  25)+AMP(  26)
     &             -AMP(  73)+AMP(  75)-AMP(  76)+AMP(  78)+AMP(  90)
     &             +AMP(  91)+AMP(  96)+AMP(  97)+AMP(  98)
      JAMP(   9) = -AMP(  23)-AMP(  24)+AMP(  31)-AMP(  32)-AMP(  34)
     &             +AMP(  35)+AMP(  36)
      JAMP(  10) = +AMP(  27)+AMP(  28)-AMP(  92)-AMP(  94)+AMP( 101)
     &             +AMP( 102)
      JAMP(  11) = +AMP(  37)+AMP(  38)
      JAMP(  12) = +AMP(  39)+AMP(  40)-AMP(  42)+AMP(  43)-AMP(  44)
     &             +AMP(  49)+AMP(  56)
      JAMP(  13) = +AMP(  41)+AMP(  42)+AMP(  44)+AMP(  45)+AMP(  46)
     &             +AMP(  59)+AMP(  60)
      JAMP(  14) = +AMP(  48)+AMP(  50)-AMP(  55)+AMP(  57)-AMP(  58)
     &             +AMP(  73)-AMP(  74)+AMP(  76)-AMP(  77)+AMP(  83)
     &             +AMP(  84)+AMP(  87)+AMP(  88)+AMP(  93)
      JAMP(  15) = -AMP(  49)-AMP(  56)+AMP(  65)+AMP(  66)-AMP(  68)
     &             +AMP(  69)-AMP(  70)
      JAMP(  16) = -AMP(  53)-AMP(  55)-AMP(  58)+AMP(  61)+AMP(  62)
     &             +AMP(  73)-AMP(  74)+AMP(  76)-AMP(  77)+AMP(  89)
     &             -AMP(  91)+AMP(  95)-AMP(  97)-AMP(  98)
      JAMP(  17) = -AMP(  59)-AMP(  60)+AMP(  67)+AMP(  68)+AMP(  70)
     &             +AMP(  71)+AMP(  72)
      JAMP(  18) = +AMP(  63)+AMP(  64)+AMP(  92)+AMP(  94)-AMP( 101)
     &             -AMP( 102)
      JAMP(  19) = +AMP(  79)+AMP(  80)-AMP(  92)-AMP(  94)-AMP(  99)
     &             -AMP( 100)
      JAMP(  20) = +AMP(  81)+AMP(  82)+AMP(  92)+AMP(  94)+AMP(  99)
     &             +AMP( 100)
      REALMTRX_178 = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          REALMTRX_178 =REALMTRX_178+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
      Do I = 1, NGRAPHS
          amp2(i)=amp2(i)+amp(i)*dconjg(amp(i))
      Enddo
      Do I = 1, NCOLOR
          Jamp2(i)=Jamp2(i)+Jamp(i)*dconjg(Jamp(i))
      Enddo
      END
       
       
