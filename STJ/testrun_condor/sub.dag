# ~~~~~~~~~~~~~~~
# ~~~ HOW-TO  ~~~
# ~~~~~~~~~~~~~~~
#
# Building the pwhg_main executable, putting it in
# this directory, and then submitting this script
# with 
# 
# condor_submit_dag sub.dag
#
# _in_this_directory_ will ultimately produce
# 1M STJ-MiNLO LH events with additional weights
# corresponding to 7-point, factor-2, muR, muF
# scale variations.
#
# Before attempting a large-scale run we recommend
# doing a small testrun first by scaling down the
# "N" variable in each of the sub_*.condor scripts
# by e.g. a factor of 20 or 30, and simultaneously
# scaling down the integration statistics for each
# job by a similar amount; specifically the ncall1 ,
# ncall2, nubound, and numevts variables in the input
# file.
#
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# *** IMPORTANT NOTE ON OUTPUT LOCATION ~~~
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# The default is to have all output from the jobs
# go into the same directory as they are submitted
# from (i.e. here). If you want the output instead
# to be sent to, e.g. some larger scratch area, you
# must specify that location by adding the path
# after ALL of the post_???.sh scripts on the lines
# below.
#
# E.g. to output to /scratch/blah/blah/stj-testing/
# you must change all lines below of the form 
#
# SCRIPT POST XXX post_YYY.sh
#
# to
#
# SCRIPT POST XXX post_YYY.sh /scratch/blah/blah/stj-testing/
#
# oooooooooooooooooooooooooooooooooooooooooo
# o  If you make a change of output        o 
# o  location as above, you must also      o
# o  update the OutDir variable to the     o
# o  same /scratch/blah/blah/stj-testing/  o
# o  in all of the sub_*.condor files in   o
# o  this directory too.                   o
# oooooooooooooooooooooooooooooooooooooooooo
#
# If /scratch/blah/blah/stj-testing/ does not exist
# provided you have enough permissions it should be
# created automatically by the job scripts.
#
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~
# ~~~ START MAIN SCRIPT ~~~
# ~~~~~~~~~~~~~~~~~~~~~~~~~
#
#
# STEP 1a: parallelstage 1, xgriditeration 1 ('xg1').
#          Importance sampling grid generation for
#          Powheg "Btilde" function.
#
PARENT XG1 CHILD XG2
JOB XG1 sub_xg1.condor
SCRIPT POST XG1 post_xg1.sh
#
#
# STEP 1b: parallelstage 1, xgriditeration 2 ('xg2').
#          Importance sampling grid combination and
#          refinement from previous step.
#
PARENT XG2 CHILD ST2
JOB XG2 sub_xg2.condor
SCRIPT POST XG2 post_xg2.sh
#
#
# STEP 2:  parallelstage 2 ('st2').
#          Upper bound determination for Powheg Btilde
#          function and remnant function, for unweighted
#          underlying Born event generation. As a first
#          step each of these jobs combines the importance
#          sampling grids formed at the end of STEP 1b.
#
PARENT ST2 CHILD ST3
JOB ST2 sub_st2.condor
SCRIPT POST ST2 post_st2.sh
#
#
# STEP 3:  parallelstage 3 ('st3').
#          Upper bound determination for Powheg Sudakov
#          form factor exponent "Real/Born".
#
PARENT ST3 CHILD ST4
JOB ST3 sub_st3.condor
SCRIPT POST ST3 post_st3.sh
#
#
# STEP 4:  parallelstage 4 ('st4').
#          Les Houches event file generation using the
#          various importance sampling grids and upper
#          bounding functions from STEPS 1-3.
#
JOB ST4 sub_st4.condor
SCRIPT POST ST4 post_st4.sh
#
#
#
