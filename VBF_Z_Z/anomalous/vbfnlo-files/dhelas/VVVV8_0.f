C     This File is Automatically generated by ALOHA 
C     The process calculated in this file is: 
C     P(3,2)*P(4,1)*Metric(1,2) - P(3,1)*P(4,2)*Metric(1,2) +
C      P(3,4)*P(4,2)*Metric(1,2) + P(3,1)*P(4,3)*Metric(1,2) +
C      P(2,3)*P(4,1)*Metric(1,3) + P(2,1)*P(4,2)*Metric(1,3) -
C      P(2,1)*P(4,3)*Metric(1,3) + P(2,4)*P(4,3)*Metric(1,3) -
C      P(2,3)*P(3,1)*Metric(1,4) - P(2,1)*P(3,2)*Metric(1,4) -
C      P(2,4)*P(3,2)*Metric(1,4) - P(2,3)*P(3,4)*Metric(1,4) -
C      P(1,2)*P(4,1)*Metric(2,3) - P(1,3)*P(4,1)*Metric(2,3) -
C      P(1,4)*P(4,2)*Metric(2,3) - P(1,4)*P(4,3)*Metric(2,3) +
C      P(-1,1)*P(-1,2)*Metric(1,4)*Metric(2,3) + P(-1,1)*P(-1,3)*Metric
C     (1,4)*Metric(2,3) + P(-1,2)*P(-1,4)*Metric(1,4)*Metric(2,3) +
C      P(-1,3)*P(-1,4)*Metric(1,4)*Metric(2,3) + P(1,2)*P(3,1)*Metric(2
C     ,4) + P(1,4)*P(3,2)*Metric(2,4) - P(1,2)*P(3,4)*Metric(2,4) +
C      P(1,3)*P(3,4)*Metric(2,4) - P(-1,1)*P(-1,2)*Metric(1,3)*Metric(2
C     ,4) - P(-1,3)*P(-1,4)*Metric(1,3)*Metric(2,4) + P(1,3)*P(2,1)*Met
C     ric(3,4) + P(1,4)*P(2,3)*Metric(3,4) + P(1,2)*P(2,4)*Metric(3,4)
C      - P(1,3)*P(2,4)*Metric(3,4) - P(-1,1)*P(-1,3)*Metric(1,2)*Metric
C     (3,4) - P(-1,2)*P(-1,4)*Metric(1,2)*Metric(3,4)
C     
      SUBROUTINE VVVV8_0(V1, V2, V3, V4, COUP,VERTEX)
      IMPLICIT NONE
      COMPLEX*16 CI
      PARAMETER (CI=(0D0,1D0))
      COMPLEX*16 TMP39
      COMPLEX*16 TMP61
      REAL*8 P3(0:3)
      COMPLEX*16 TMP64
      COMPLEX*16 COUP
      COMPLEX*16 TMP60
      COMPLEX*16 V3(*)
      REAL*8 P2(0:3)
      COMPLEX*16 TMP20
      COMPLEX*16 TMP6
      COMPLEX*16 TMP15
      COMPLEX*16 TMP67
      COMPLEX*16 TMP68
      COMPLEX*16 TMP63
      COMPLEX*16 V2(*)
      COMPLEX*16 TMP12
      REAL*8 P1(0:3)
      COMPLEX*16 TMP65
      COMPLEX*16 TMP66
      COMPLEX*16 TMP24
      COMPLEX*16 VERTEX
      COMPLEX*16 TMP27
      REAL*8 P4(0:3)
      COMPLEX*16 TMP62
      COMPLEX*16 V1(*)
      COMPLEX*16 TMP35
      COMPLEX*16 TMP59
      COMPLEX*16 TMP17
      COMPLEX*16 V4(*)
      COMPLEX*16 TMP70
      COMPLEX*16 TMP29
      COMPLEX*16 TMP8
      P1(0) = DBLE(V1(1))
      P1(1) = DBLE(V1(2))
      P1(2) = DIMAG(V1(2))
      P1(3) = DIMAG(V1(1))
      P2(0) = DBLE(V2(1))
      P2(1) = DBLE(V2(2))
      P2(2) = DIMAG(V2(2))
      P2(3) = DIMAG(V2(1))
      P3(0) = DBLE(V3(1))
      P3(1) = DBLE(V3(2))
      P3(2) = DIMAG(V3(2))
      P3(3) = DIMAG(V3(1))
      P4(0) = DBLE(V4(1))
      P4(1) = DBLE(V4(2))
      P4(2) = DIMAG(V4(2))
      P4(3) = DIMAG(V4(1))
      TMP24 = (V3(3)*P1(0)-V3(4)*P1(1)-V3(5)*P1(2)-V3(6)*P1(3))
      TMP68 = (P2(0)*P4(0)-P2(1)*P4(1)-P2(2)*P4(2)-P2(3)*P4(3))
      TMP27 = (V3(3)*P2(0)-V3(4)*P2(1)-V3(5)*P2(2)-V3(6)*P2(3))
      TMP20 = (P3(0)*V2(3)-P3(1)*V2(4)-P3(2)*V2(5)-P3(3)*V2(6))
      TMP60 = (V2(3)*V4(3)-V2(4)*V4(4)-V2(5)*V4(5)-V2(6)*V4(6))
      TMP61 = (V3(3)*V4(3)-V3(4)*V4(4)-V3(5)*V4(5)-V3(6)*V4(6))
      TMP62 = (P1(0)*V4(3)-P1(1)*V4(4)-P1(2)*V4(5)-P1(3)*V4(6))
      TMP63 = (V3(3)*P4(0)-V3(4)*P4(1)-V3(5)*P4(2)-V3(6)*P4(3))
      TMP64 = (P2(0)*V4(3)-P2(1)*V4(4)-P2(2)*V4(5)-P2(3)*V4(6))
      TMP29 = (V2(3)*V1(3)-V2(4)*V1(4)-V2(5)*V1(5)-V2(6)*V1(6))
      TMP66 = (V2(3)*P4(0)-V2(4)*P4(1)-V2(5)*P4(2)-V2(6)*P4(3))
      TMP67 = (V1(3)*P4(0)-V1(4)*P4(1)-V1(5)*P4(2)-V1(6)*P4(3))
      TMP59 = (V1(3)*V4(3)-V1(4)*V4(4)-V1(5)*V4(5)-V1(6)*V4(6))
      TMP65 = (P3(0)*V4(3)-P3(1)*V4(4)-P3(2)*V4(5)-P3(3)*V4(6))
      TMP39 = (V3(3)*V2(3)-V3(4)*V2(4)-V3(5)*V2(5)-V3(6)*V2(6))
      TMP15 = (P3(0)*V1(3)-P3(1)*V1(4)-P3(2)*V1(5)-P3(3)*V1(6))
      TMP17 = (P1(0)*V2(3)-P1(1)*V2(4)-P1(2)*V2(5)-P1(3)*V2(6))
      TMP70 = (P3(0)*P4(0)-P3(1)*P4(1)-P3(2)*P4(2)-P3(3)*P4(3))
      TMP35 = (V3(3)*V1(3)-V3(4)*V1(4)-V3(5)*V1(5)-V3(6)*V1(6))
      TMP12 = (P2(0)*V1(3)-P2(1)*V1(4)-P2(2)*V1(5)-P2(3)*V1(6))
      TMP8 = (P1(0)*P3(0)-P1(1)*P3(1)-P1(2)*P3(2)-P1(3)*P3(3))
      TMP6 = (P1(0)*P2(0)-P1(1)*P2(1)-P1(2)*P2(2)-P1(3)*P2(3))
      VERTEX = COUP*(TMP39*(TMP59*-1D0*(+CI*(TMP6+TMP8+TMP68+TMP70))
     $ +(TMP62*(+CI*(TMP12+TMP15))+TMP67*(+CI*(TMP64+TMP65))))
     $ +(TMP29*(TMP24*(-CI*(TMP65)+CI*(TMP64))+(TMP61*(+CI*(TMP8
     $ +TMP68))+(-CI*(TMP27*TMP62+TMP63*TMP64))))+(TMP35*(TMP17*(
     $ -CI*(TMP64)+CI*(TMP65))+(TMP60*(+CI*(TMP6+TMP70))+(-CI*(TMP20
     $ *TMP62+TMP65*TMP66))))+(TMP59*(TMP20*(+CI*(TMP24+TMP63))
     $ +TMP27*(+CI*(TMP17+TMP66)))+(TMP60*(TMP12*(-CI*(TMP24)
     $ +CI*(TMP63))+(-CI*(TMP27*TMP67+TMP15*TMP63)))+TMP61*(TMP15*(
     $ -CI*(TMP17)+CI*(TMP66))+(-CI*(TMP20*TMP67+TMP12*TMP66))))))))
      END


