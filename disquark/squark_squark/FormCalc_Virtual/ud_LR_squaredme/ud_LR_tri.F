* ud_LR_tri.F
* form factors for {MU, MD} -> {MSf[1, 3, 1], MSf[2, 4, 1]}
* generated by FormCalc 6.1D0 11 Jun 2012 16:06

	subroutine ud_LR_tri
	implicit none

#include "ud_LR_vars.h"

	double complex dup17, dup18

        dup17 = dZGl1 + 4*dZgs1y + DCONJG(dZGl1) + 
     -   DCONJG(dZSq1(13,1,1,1,1)) + DCONJG(dZSq1(14,2,2,1,1)) + 
     -   dZfL1(3,1,1) + dZfR1(4,1,1)

        dup18 = F6*DCONJG(dZSq1(13,2,1,1,1)) + 
     -   F3*DCONJG(dZSq1(14,1,2,1,1))

        Cloop(7) = Cloop(7) + 
     -   (-(Alfas2*(F4 + F9)) + 
     -      Alfas2*F9*(MGl2 + mtemp2d2)*Cval(cc0,iint16) + 
     -      Alfas2*F9*(MGl2 + mtemp1u1)*Cval(cc0,iint17) + 
     -      Alfas2*F9*(-mtemp2d2 + T)*
     -       (Cval(cc0,iint18) + Cval(cc1,iint18)) + 
     -      Alfas2*F4*(-MGl2 + mtemp1u1 + T)*Cval(cc1,iint22) + 
     -      Alfas2*F9*(-MGl2 + mtemp2d2 + T)*Cval(cc2,iint18) + 
     -      Alfas2*F4*(-mtemp1u1 + T)*
     -       (Cval(cc0,iint22) + Cval(cc2,iint22)) + 
     -      3*Alfas2*Bval(bb0,iint1)*(F9 + 2/3.D0*F4) + 
     -      (2*Pi)/3.D0*(Alfas*dup17*F4) + 
     -      (2*Pi)/3.D0*(Alfas*dup18*MGl) + 
     -      Alfas2*F9*Cval(cc2,iint21)*
     -       (-(1/6.D0*mtemp1u1) + 1/18.D0*T) + 
     -      Alfas2*F9*Cval(cc2,iint19)*
     -       (-(1/6.D0*mtemp2d2) + 1/18.D0*T) + 
     -      Alfas2*F9*(Cval(cc0,iint21) + Cval(cc1,iint21))*
     -       (-(1/9.D0*mtemp1u1) + 1/9.D0*T) + 
     -      Alfas2*F9*(Cval(cc0,iint19) + Cval(cc1,iint19))*
     -       (-(1/9.D0*mtemp2d2) + 1/9.D0*T) - 
     -      1/18.D0*(Alfas2*F9*
     -         (Bval(bb0,iint14) + Bval(bb0,iint15))) + 
     -      1/9.D0*(Alfas2*F4*MGl2*
     -         (Cval(cc0,iint20) + Cval(cc1,iint20))) + 
     -      1/2.D0*(Alfas2*F9*(MGl2 + mtemp2d2)*
     -         (Cval(cc1,iint16) + Cval(cc2,iint16))) + 
     -      1/2.D0*(Alfas2*F9*(MGl2 + mtemp1u1)*
     -         (Cval(cc1,iint17) + Cval(cc2,iint17))) - 
     -      1/9.D0*(Alfas2*F9*MGl2*
     -         (Cval(cc1,iint23) + Cval(cc2,iint23))))/(-MGl2 + T)

#ifdef DEBUG
	DEB 'tri: Cloop(7) =', Cloop(7)
#endif

        Cloop(8) = Cloop(8) + 
     -   (3*Alfas2*(F4 + F9) - 
     -      3*Alfas2*F9*(MGl2 + mtemp2d2)*Cval(cc0,iint16) - 
     -      3*Alfas2*F9*(MGl2 + mtemp1u1)*Cval(cc0,iint17) + 
     -      Alfas2*F9*(3*mtemp2d2 - 3*T)*
     -       (Cval(cc0,iint18) + Cval(cc1,iint18)) + 
     -      Alfas2*F4*(3*MGl2 - 3*mtemp1u1 - 3*T)*
     -       Cval(cc1,iint22) + 
     -      Alfas2*F9*(3*MGl2 - 3*mtemp2d2 - 3*T)*
     -       Cval(cc2,iint18) + 
     -      Alfas2*F4*(3*mtemp1u1 - 3*T)*
     -       (Cval(cc0,iint22) + Cval(cc2,iint22)) - 
     -      9*Alfas2*Bval(bb0,iint1)*(F9 + 2/3.D0*F4) - 
     -      2*Pi*(Alfas*dup17*F4) - 2*Pi*(Alfas*dup18*MGl) + 
     -      Alfas2*F9*Cval(cc2,iint21)*(1/2.D0*mtemp1u1 - 1/6.D0*T) + 
     -      Alfas2*F9*Cval(cc2,iint19)*(1/2.D0*mtemp2d2 - 1/6.D0*T) + 
     -      Alfas2*F9*(Cval(cc0,iint21) + Cval(cc1,iint21))*
     -       (1/3.D0*mtemp1u1 - 1/3.D0*T) + 
     -      Alfas2*F9*(Cval(cc0,iint19) + Cval(cc1,iint19))*
     -       (1/3.D0*mtemp2d2 - 1/3.D0*T) + 
     -      1/6.D0*(Alfas2*F9*
     -         (Bval(bb0,iint14) + Bval(bb0,iint15))) - 
     -      1/3.D0*(Alfas2*F4*MGl2*
     -         (Cval(cc0,iint20) + Cval(cc1,iint20))) - 
     -      3/2.D0*(Alfas2*F9*(MGl2 + mtemp2d2)*
     -         (Cval(cc1,iint16) + Cval(cc2,iint16))) - 
     -      3/2.D0*(Alfas2*F9*(MGl2 + mtemp1u1)*
     -         (Cval(cc1,iint17) + Cval(cc2,iint17))) + 
     -      1/3.D0*(Alfas2*F9*MGl2*
     -         (Cval(cc1,iint23) + Cval(cc2,iint23))))/(-MGl2 + T)

#ifdef DEBUG
	DEB 'tri: Cloop(8) =', Cloop(8)
#endif

	end
