cc Routine for gg-> sqsqbarg process
cc only relevant for same-fla/same-chir squarks-> only one mass involved
cc modified accordingly
cc for the color-flows: there are no 1/Nc terms-> simply take the MG results
cc here and return in jamp2 the 6 flows
cc Remove some redundant HELAS-calls -> need only 27 calls, as in the 
cc old MG4-routines

      SUBROUTINE Sgg_sqsqbarg(P,ANS,jamp2) !CH: return jamp2
C     
C     Generated by MadGraph 5 v. 1.3.1, 2011-06-02
C     By the MadGraph Development Team
C     Please visit us at https://launchpad.net/madgraph5
C     
C     MadGraph StandAlone Version
C     
C     Returns amplitude squared summed/avg over colors
C     and helicities
C     for the point in phase space P(0:3,NEXTERNAL)
C     
C     Process: g g > ul ul~ g QED=0
C     
      IMPLICIT NONE
C     
C     CONSTANTS
C     
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=5)
      INTEGER                 NCOMB
      PARAMETER (             NCOMB=8)
C     
C     ARGUMENTS 
C     
      REAL*8 P(0:3,NEXTERNAL),ANS,jamp2(0:6) !CH: return later on jamp2
C     
C     LOCAL VARIABLES 
C     
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T
      REAL*8 gg_sqsqbarg
      INTEGER IHEL,IDEN, I
      INTEGER JC(NEXTERNAL)
      LOGICAL GOODHEL(NCOMB)
      DATA NTRY/0/
      DATA GOODHEL/NCOMB*.FALSE./
      DATA (NHEL(I,   1),I=1,5) /-1,-1, 0, 0,-1/
      DATA (NHEL(I,   2),I=1,5) /-1,-1, 0, 0, 1/
      DATA (NHEL(I,   3),I=1,5) /-1, 1, 0, 0,-1/
      DATA (NHEL(I,   4),I=1,5) /-1, 1, 0, 0, 1/
      DATA (NHEL(I,   5),I=1,5) / 1,-1, 0, 0,-1/
      DATA (NHEL(I,   6),I=1,5) / 1,-1, 0, 0, 1/
      DATA (NHEL(I,   7),I=1,5) / 1, 1, 0, 0,-1/
      DATA (NHEL(I,   8),I=1,5) / 1, 1, 0, 0, 1/
      DATA IDEN/256/
	REAL*8 jamp2temp(1:6) !CH: obtain temp-results from matrix via common-block
	common/gg_sqsqbar_jamp2/jamp2temp
C     ----------
C     BEGIN CODE
C     ----------
      NTRY=NTRY+1
      DO IHEL=1,NEXTERNAL
        JC(IHEL) = +1
      ENDDO
      ANS = 0D0

	jamp2(0)=6 !CH: we have 6 color-flows
	do i=1,6
	  jamp2temp(i)=0d0
	enddo

      DO IHEL=1,NCOMB
        IF (GOODHEL(IHEL) .OR. NTRY .LT. 2) THEN
          T=gg_sqsqbarg(P ,NHEL(1,IHEL),JC(1))
          ANS=ANS+T
          IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL)) THEN
            GOODHEL(IHEL)=.TRUE.
          ENDIF
        ENDIF
      ENDDO
      ANS=ANS/DBLE(IDEN)

cc copy the temp-result..
	do i=1,6
	  jamp2(i)=jamp2temp(i)
	enddo
      END


      REAL*8 FUNCTION gg_sqsqbarg(P,NHEL,IC)
C     
C     Generated by MadGraph 5 v. 1.3.1, 2011-06-02
C     By the MadGraph Development Team
C     Please visit us at https://launchpad.net/madgraph5
C     
C     Returns amplitude squared summed/avg over colors
C     for the point with external lines W(0:6,NEXTERNAL)
C     
C     Process: g g > ul ul~ g QED=0
C     
      IMPLICIT NONE
	include 'nlegborn.h'
	include 'pwhg_kn.h'
C     
C     CONSTANTS
C     
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=36)
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=5)
      INTEGER    NWAVEFUNCS, NCOLOR
      PARAMETER (NWAVEFUNCS=28, NCOLOR=6)
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
      COMPLEX*16 IMAG1
      PARAMETER (IMAG1=(0D0,1D0))
	REAL*8 msq,wsq
C     
C     ARGUMENTS 
C     
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C     
C     LOCAL VARIABLES 
C     
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
      COMPLEX*16 DUM0,DUM1
      DATA DUM0, DUM1/(0D0, 0D0), (1D0, 0D0)/
	REAL*8 jamp2(1:NCOLOR) !CH: return results for the color-flows
	common/gg_sqsqbar_jamp2/jamp2
C     
C     GLOBAL VARIABLES
C     
      INCLUDE 'coupl.inc'

ccc CH: set masses and widths:
	if(kn_masses(3).ne.kn_masses(4)) then
	  write(*,*) 'In gg_sqsqbarg: found different masses for the 2 squarks:'
	  write(*,*) kn_masses(3:4)
	  write(*,*) 'Stop further execution'
	  call exit(-1)
	endif
	msq=kn_masses(3)
	wsq=0d0
C     
C     COLOR DATA
C     
      DATA DENOM(1)/9/
      DATA (CF(I,  1),I=  1,  6) /   64,   -8,   -8,    1,    1,   10/
C     1 T(1,2,5,3,4)
      DATA DENOM(2)/9/
      DATA (CF(I,  2),I=  1,  6) /   -8,   64,    1,   10,   -8,    1/
C     1 T(1,5,2,3,4)
      DATA DENOM(3)/9/
      DATA (CF(I,  3),I=  1,  6) /   -8,    1,   64,   -8,   10,    1/
C     1 T(2,1,5,3,4)
      DATA DENOM(4)/9/
      DATA (CF(I,  4),I=  1,  6) /    1,   10,   -8,   64,    1,   -8/
C     1 T(2,5,1,3,4)
      DATA DENOM(5)/9/
      DATA (CF(I,  5),I=  1,  6) /    1,   -8,   10,    1,   64,   -8/
C     1 T(5,1,2,3,4)
      DATA DENOM(6)/9/
      DATA (CF(I,  6),I=  1,  6) /   10,    1,    1,   -8,   -8,   64/
C     1 T(5,2,1,3,4)
C     ----------
C     BEGIN CODE
C     ----------
      CALL VXXXXX(P(0,1),ZERO,NHEL(1),-1*IC(1),W(1,1))
      CALL VXXXXX(P(0,2),ZERO,NHEL(2),-1*IC(2),W(1,2))
      CALL SXXXXX(P(0,3),+1*IC(3),W(1,3))
      CALL SXXXXX(P(0,4),+1*IC(4),W(1,4))
      CALL VXXXXX(P(0,5),ZERO,NHEL(5),+1*IC(5),W(1,5))
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
      CALL JVVXXX(W(1,1),W(1,2),G,ZERO,ZERO,W(1,6))
      CALL JSSXXX(W(1,3),W(1,4),GC,ZERO,ZERO,W(1,7))
C     Amplitude(s) for diagram number 1
      CALL VVVXXX(W(1,6),W(1,7),W(1,5),G,AMP(1))
      CALL HVSXXX(W(1,5),W(1,3),GC,msq,wsq,W(1,8))!CH
C     Amplitude(s) for diagram number 2
      CALL VSSXXX(W(1,6),W(1,8),W(1,4),GC,AMP(2))
      CALL HVSXXX(W(1,5),W(1,4),-GC,msq,wsq,W(1,9))!CH
C     Amplitude(s) for diagram number 3
      CALL VSSXXX(W(1,6),W(1,3),W(1,9),GC,AMP(3))
C     Amplitude(s) for diagram number 4
      CALL VVSSXX(W(1,5),W(1,6),W(1,3),W(1,4),G2C,AMP(4))
! !       CALL VVSSXX(W(1,5),W(1,6),W(1,3),W(1,4),G2C,AMP(5))
	AMP(5)=AMP(4)
      CALL HVSXXX(W(1,1),W(1,3),GC,msq,wsq,W(1,10))!CH
      CALL HVSXXX(W(1,2),W(1,4),-GC,msq,wsq,W(1,11))!CH
C     Amplitude(s) for diagram number 5
      CALL VSSXXX(W(1,5),W(1,10),W(1,11),GC,AMP(6))
      CALL JVVXXX(W(1,2),W(1,5),G,ZERO,ZERO,W(1,12))
C     Amplitude(s) for diagram number 6
      CALL VSSXXX(W(1,12),W(1,10),W(1,4),GC,AMP(7))
C     Amplitude(s) for diagram number 7
      CALL VSSXXX(W(1,2),W(1,10),W(1,9),GC,AMP(8))
C     Amplitude(s) for diagram number 8
      CALL VVSSXX(W(1,2),W(1,5),W(1,10),W(1,4),G2C,AMP(9))
! !       CALL VVSSXX(W(1,2),W(1,5),W(1,10),W(1,4),G2C,AMP(10))
	AMP(10)=AMP(9)
      CALL HVSXXX(W(1,1),W(1,4),-GC,msq,wsq,W(1,13))!CH
      CALL HVSXXX(W(1,2),W(1,3),GC,msq,wsq,W(1,14))!CH
C     Amplitude(s) for diagram number 9
      CALL VSSXXX(W(1,5),W(1,14),W(1,13),GC,AMP(11))
C     Amplitude(s) for diagram number 10
      CALL VSSXXX(W(1,12),W(1,3),W(1,13),GC,AMP(12))
C     Amplitude(s) for diagram number 11
      CALL VSSXXX(W(1,2),W(1,8),W(1,13),GC,AMP(13))
C     Amplitude(s) for diagram number 12
      CALL VVSSXX(W(1,2),W(1,5),W(1,3),W(1,13),G2C,AMP(14))
! !       CALL VVSSXX(W(1,2),W(1,5),W(1,3),W(1,13),G2C,AMP(15))
	AMP(15)=AMP(14)
      CALL JVVXXX(W(1,1),W(1,5),G,ZERO,ZERO,W(1,15))
C     Amplitude(s) for diagram number 13
      CALL VSSXXX(W(1,15),W(1,14),W(1,4),GC,AMP(16))
C     Amplitude(s) for diagram number 14
      CALL VSSXXX(W(1,15),W(1,3),W(1,11),GC,AMP(17))
C     Amplitude(s) for diagram number 15
      CALL VVVXXX(W(1,15),W(1,2),W(1,7),G,AMP(18))
C     Amplitude(s) for diagram number 16
      CALL VVSSXX(W(1,2),W(1,15),W(1,3),W(1,4),G2C,AMP(19))
! !       CALL VVSSXX(W(1,2),W(1,15),W(1,3),W(1,4),G2C,AMP(20))
	AMP(20)=AMP(19)
C     Amplitude(s) for diagram number 17
      CALL VSSXXX(W(1,1),W(1,14),W(1,9),GC,AMP(21))
C     Amplitude(s) for diagram number 18
      CALL VSSXXX(W(1,1),W(1,8),W(1,11),GC,AMP(22))
C     Amplitude(s) for diagram number 19
      CALL VVVXXX(W(1,1),W(1,12),W(1,7),G,AMP(23))
      CALL HVVSXX(W(1,1),W(1,2),W(1,3),G2C,msq,wsq,W(1,16))!CH
! !       CALL HVVSXX(W(1,1),W(1,2),W(1,3),G2C,msq,wsq,W(1,17))!CH
C     Amplitude(s) for diagram number 20
      CALL VSSXXX(W(1,5),W(1,16),W(1,4),GC,AMP(24))
! !       CALL VSSXXX(W(1,5),W(1,17),W(1,4),GC,AMP(25))
	AMP(25)=AMP(24)
      CALL HVVSXX(W(1,1),W(1,2),W(1,4),G2C,msq,wsq,W(1,18))!CH
! !       CALL HVVSXX(W(1,1),W(1,2),W(1,4),G2C,msq,wsq,W(1,19))!CH
C     Amplitude(s) for diagram number 21
      CALL VSSXXX(W(1,5),W(1,3),W(1,18),GC,AMP(26))
! !       CALL VSSXXX(W(1,5),W(1,3),W(1,19),GC,AMP(27))
	AMP(27)=AMP(26)
      CALL JGGGXX(W(1,5),W(1,2),W(1,1),G,W(1,20))
      CALL JGGGXX(W(1,1),W(1,5),W(1,2),G,W(1,21))
      CALL JGGGXX(W(1,2),W(1,1),W(1,5),G,W(1,22))
C     Amplitude(s) for diagram number 22
      CALL VSSXXX(W(1,20),W(1,3),W(1,4),GC,AMP(28))
      CALL VSSXXX(W(1,21),W(1,3),W(1,4),GC,AMP(29))
      CALL VSSXXX(W(1,22),W(1,3),W(1,4),GC,AMP(30))
      CALL JVSSXX(W(1,1),W(1,3),W(1,4),G2C,ZERO,ZERO,W(1,23))
! !       CALL JVSSXX(W(1,1),W(1,3),W(1,4),G2C,ZERO,ZERO,W(1,24))
C     Amplitude(s) for diagram number 23
      CALL VVVXXX(W(1,2),W(1,5),W(1,23),G,AMP(31))
! !       CALL VVVXXX(W(1,2),W(1,5),W(1,24),G,AMP(32))
	AMP(32)=AMP(31)
      CALL HVVSXX(W(1,1),W(1,5),W(1,3),G2C,msq,wsq,W(1,25))!CH
! !       CALL HVVSXX(W(1,1),W(1,5),W(1,3),G2C,msq,wsq,W(1,26))!CH
C     Amplitude(s) for diagram number 24
      CALL VSSXXX(W(1,2),W(1,25),W(1,4),GC,AMP(33))
! !       CALL VSSXXX(W(1,2),W(1,26),W(1,4),GC,AMP(34))
	AMP(34)=AMP(33)
      CALL HVVSXX(W(1,1),W(1,5),W(1,4),G2C,msq,wsq,W(1,27))!CH
! !       CALL HVVSXX(W(1,1),W(1,5),W(1,4),G2C,msq,wsq,W(1,28))!CH
C     Amplitude(s) for diagram number 25
      CALL VSSXXX(W(1,2),W(1,3),W(1,27),GC,AMP(35))
! !       CALL VSSXXX(W(1,2),W(1,3),W(1,28),GC,AMP(36))
	AMP(36)=AMP(35) !CH
ccccccccc
      JAMP(1)=-AMP(1)+AMP(3)+AMP(5)+AMP(7)+AMP(8)+AMP(9)+AMP(23)
     $ +AMP(24)+AMP(30)-AMP(28)+AMP(32)
      JAMP(2)=+AMP(6)-AMP(7)+AMP(10)+AMP(17)+AMP(18)+AMP(20)-AMP(23)
     $ -AMP(29)+AMP(28)-AMP(32)+AMP(33)
      JAMP(3)=+AMP(1)-AMP(3)-AMP(5)+AMP(16)-AMP(18)+AMP(19)+AMP(21)
     $ +AMP(25)-AMP(30)+AMP(29)+AMP(35)
      JAMP(4)=+AMP(11)+AMP(12)+AMP(14)-AMP(16)+AMP(18)-AMP(19)-AMP(23)
     $ -AMP(29)+AMP(28)+AMP(31)+AMP(36)
      JAMP(5)=+AMP(1)+AMP(2)+AMP(4)-AMP(17)-AMP(18)-AMP(20)+AMP(22)
     $ +AMP(26)-AMP(30)+AMP(29)+AMP(34)
      JAMP(6)=-AMP(1)-AMP(2)-AMP(4)-AMP(12)+AMP(13)+AMP(15)+AMP(23)
     $ +AMP(27)+AMP(30)-AMP(28)-AMP(31)

      gg_sqsqbarg = 0.D0
      DO I = 1, NCOLOR
        ZTEMP = (0.D0,0.D0)
        DO J = 1, NCOLOR
          ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
        ENDDO
        gg_sqsqbarg = gg_sqsqbarg+ZTEMP*DCONJG(JAMP(I))/DENOM(I)
      ENDDO

	Do I=1,NCOLOR !CH: calculate stuff for the color-flows (there are not color-suppressed contributions here!)
	  jamp2(I)=jamp2(I)+JAMP(I)*DCONJG(JAMP(I))
	enddo
      END
